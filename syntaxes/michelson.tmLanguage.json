{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Michelson",
	"patterns": [
    {
			"include": "#bytes"
		},
    {
			"include": "#string"
    },
    {
			"include": "#number"
    },
		{
			"include": "#comment"
		},
		{
			"include": "#block"
		},
		{
			"include": "#data"
		},
		{
			"include": "#instruction"
		},
		{
			"include": "#type"
		},
		{
			"include": "#ctype"
		},
		{
			"include": "#literal"
    },
    {
			"include": "#macros"
    },
    {
      "include": "#annotations"
    }
	],
	"repository": {
    "string": {
      "name": "string.quoted.michelson",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "string.quoted.michelson",
          "match": "\\\\."
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "string.quoted.michelson",
          "match": "-?[0-9]+"
        }
      ]
    },
    "bytes": {
      "patterns": [
        {
          "name": "string.quoted.michelson",
          "match": "0x[0-9A-z]+"
        }
      ]
    },
		"comment": {
			"name": "comment.language.michelson",
			"begin": "#",
			"end": "\n",
			"patterns": [
				{
					"name": "constant.character.escape.michelson",
					"match": "wordPattern"
				}
			]
		},
		"block": {
			"patterns": [
				{
					"match": "\\b(parameter|storage|code?)\\b",
					"name": "storage.modifier.michelson"
				}
			]
		},
		"data": {
			"patterns": [
				{
					"match": "\\b(Unit|True|False|Pair|Left|Right|Some|None|Elt?)\\b",
					"name": "support.constant.michelson"
				}
			]
		},
		"instruction": {
			"patterns": [
				{
					"match": "\\b(DROP|DUP|SWAP|PUSH|SOME|NONE|UNIT|IF_NONE|PAIR|CAR|CDR|LEFT|RIGHT|IF_LEFT|IF_RIGHT|NIL|CONS|IF_CONS|SIZE|EMPTY_SET|EMPTY_MAP|MAP|ITER|MEM|GET|UPDATE|IF|LOOP|LOOP_LEFT|LAMBDA|EXEC|DIP|FAILWITH|CAST|RENAME|CONCAT|SLICE|PACK|UNPACK|ADD|SUB|MUL|EDIV|ABS|NEG|LSL|LSR|OR|AND|XOR|NOT|COMPARE|EQ|NEQ|LT|GT|LE|GE|SELF|CONTRACT|TRANSFER_TOKENS|SET_DELEGATE|CREATE_ACCOUNT|CREATE_CONTRACT|CREATE_CONTRACT|IMPLICIT_ACCOUNT|NOW|AMOUNT|BALANCE|CHECK_SIGNATURE|BLAKE2B|SHA256|SHA512|HASH_KEY|STEPS_TO_QUOTA|SOURCE|SENDER|ADDRESS)\\b",
					"name": "keyword.control.michelson"
				}
			]
		},
		"type": {
			"patterns": [
				{
					"match": "\\b(option|list|set|contract|pair|or|lambda|map|big_map?)\\b",
					"name": "support.function.michelson"
				}
			]
		},
		"ctype": {
			"patterns": [
				{
					"match": "\\b(key|unit|signature|operation|address|int|nat|string|bytes|mutez|bool|key_hash|timestamp?)\\b",
					"name": "support.type.michelson"
				}
			]
		},
		"literal": {
			"patterns": [
				{
					"match": "\\b(TODO?)\\b",
					"name": "keyword.literal.constant.michelson"
				}
			]
    },
    "macros": {
			"patterns": [
				{
          "match": "\\b(IF_SOME|FAIL|ASSERT|ASSERT_NONE|ASSERT_SOME|ASSERT_LEFT|ASSERT_RIGHT|UNPAIR|(SET|MAP)_C[AD]+R)\\b",
          "name": "meta.object-literal.key.michelson"
        },
        {
					"match": "\\b(DII+P|C[AD]{2,}R|DUU+P|P[PAI]{3,}R|UNP[PAI]{3,}R)\\b",
					"name": "meta.object-literal.key.michelson"
        },
        {
					"match": "\\bCMP(EQ|NEQ|LT|GT|LE|GE)\\b",
					"name": "meta.object-literal.key.michelson"
        },
        {
					"match": "\\bIF(EQ|NEQ|LT|GT|LE|GE)\\b",
					"name": "meta.object-literal.key.michelson"
        },
        {
					"match": "\\bIFCMP(EQ|NEQ|LT|GT|LE|GE)\\b",
					"name": "meta.object-literal.key.michelson"
        },
        {
					"match": "\\bASSERT_(EQ|NEQ|LT|LE|GT|GE)\\b",
					"name": "meta.object-literal.key.michelson"
        },
        {
					"match": "\\bASSERT_CMP(EQ|NEQ|LT|LE|GT|GE)\\b",
					"name": "meta.object-literal.key.michelson"
        }
			]
    },
    "annotations": {
      "patterns": [
        {
          "match": "%[A-z_0-9%@]*",
          "name": "constant.character.escape.michelson"
        },
        {
          "match": "@[A-z_0-9%]+",
          "name": "constant.character.escape.michelson"
        },
        {
          "match": ":[A-z_0-9]+",
          "name": "constant.character.escape.michelson"
        }
      ]
    }
	},
	"scopeName": "source.michelson"
}
